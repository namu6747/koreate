package service;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;

import dao.NoticeDAO;
import dao.NoticeDAOImpl;
import util.Criteria;
import util.PageMaker;
import util.SearchCriteria;
import vo.NoticeVO;

public class NoticeServiceImpl implements NoticeService {

	NoticeDAO dao = new NoticeDAOImpl();
	
	@Override
	public boolean noticeWrite(HttpServletRequest req) {
		String notice_category = req.getParameter("notice_category");
		String notice_author = req.getParameter("notice_author");
		String notice_title = req.getParameter("notice_title");
		String notice_content = req.getParameter("notice_content");
		NoticeVO noticeVO = new NoticeVO(
									notice_category,
									notice_author,
									notice_title,
									notice_content
							);
		System.out.println(noticeVO);
		return dao.noticeWrite(noticeVO);
	}

	@Override
	public void noticeList(HttpServletRequest req) {
		
		int page = 1;
		
		String requestPage = req.getParameter("page");
		if(requestPage != null) {
			page = Integer.parseInt(requestPage);
		}
		
		Criteria cri = new Criteria(page,10);
		int listCount = dao.getListCount();
		
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(listCount);
		System.out.println("NoticeList PageMaker : " + pageMaker);
		
		ArrayList<NoticeVO> noticeList
			= dao.noticeList(cri.getStartPage(), cri.getPerPageNum());
		
		req.setAttribute("noticeList", noticeList);
		req.setAttribute("pageMaker", pageMaker);
	}

	@Override
	public void noticeDetail(HttpServletRequest req) {
		String num = req.getParameter("notice_num");
		int notice_num = Integer.parseInt(num);
		req.setAttribute("notice", dao.noticeDetail(notice_num));
	}

	@Override
	public boolean noticeUpdate(HttpServletRequest req) {
		int notice_num = Integer.parseInt(req.getParameter("notice_num"));
		String notice_category = req.getParameter("notice_category");
		String notice_author = req.getParameter("notice_author");
		String notice_title = req.getParameter("notice_title");
		String notice_content = req.getParameter("notice_content");
		
		NoticeVO notice = new NoticeVO(
				notice_category,
				notice_author,
				notice_title,
				notice_content
		);
		notice.setNotice_num(notice_num);
		System.out.println("수정요청 : " + notice);
		return dao.noticeUpdate(notice);
	}

	@Override
	public boolean noticeDelete(HttpServletRequest req) {
		int notice_num = Integer.parseInt(req.getParameter("notice_num"));
		return dao.noticeDelete(notice_num);
	}

	@Override
	public void search(HttpServletRequest req) {
		int page = 1;
		
		String requestPage = req.getParameter("page");
		if(requestPage != null) {
			page = Integer.parseInt(requestPage);
		}
		
		String searchName = req.getParameter("searchName");
		String searchValue = req.getParameter("searchValue");
		
		System.out.println("searchName : " + searchName);
		System.out.println("searchValue : " + searchValue);
		
		Criteria cri = new SearchCriteria(page, 10, searchName, searchValue);
		
		int listCount = dao.getSearchListCount(searchName,searchValue);
		
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(listCount);
		
		req.setAttribute("pageMaker",pageMaker);
		
		ArrayList<NoticeVO> noticeList = dao.getSearchList(pageMaker);
		req.setAttribute("noticeList", noticeList);
		req.setAttribute("searchName", searchName);
		req.setAttribute("searchValue", searchValue);
	}

}








